brew install minikube
curl -L https://istio.io/downloadIstio | sh -
cd istio-1.5.1
export PATH=$PWD/bin:$PATH
minikube start
istioctl manifest apply --set profile=demo
kubectl label namespace default istio-injection=enabled
kubectl config current-context
kubectl create namespace tutorial
cd customer
mvn clean package
docker build -t example/customer .
cd..
cd preferences
mvn clean package
docker build -t example/preference . 
cd ..
kubectl config set-context $(kubectl config current-context) --namespace=tutorial
kubectl apply -f <(istioctl kube-inject -f customer/kubernetes/Deployment.yml) -n tutorial
kubectl create -f customer/kubernetes/Service.yml -n tutorial
kubectl create -f customer/kubernetes/Gateway.yml -n tutorial
kubectl get pods -w -n tutorial
kubectl get svc istio-ingressgateway -n istio-system
export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
export INGRESS_HOST=$(minikube ip)



Run this command in a new terminal window to start a Minikube tunnel that sends traffic to your Istio Ingress Gateway:

minikube tunnel






export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT
echo $GATEWAY_URL
curl $GATEWAY_URL/customer


For Dashboard
istioctl dashboard kiali
